Otus DZ 7 Идемпотентость и коммутативность API в HTTP и очередях
Дмитрий Авдонин

Реализован сервис order с поддержкой идемпотентности в следующих сценариях:

1. Создание заказа POST /order

При создании заказа необходимо в заголовке x-idempotency-key передать уникальный идентификатор в формате uuid. 
Такой ключ клиент може сгенерировать самостоятельно, либо запросить из сервиса order GET /idempotency-key
При получении такого запроса сервис order проверяет наличе такого ключа идемпотентности в специальной таблице обработанных сообщений:
1) если не находит - создает заказ
2) если находит - возвращает 200 с ранее созданным заказом

Если ключ идемпотентности в запросе не обнаружен, сервис возвращает ошибку 401 Bad Request

2. Обновление существующего заказа PUT /order/:id

Предварительно клиент запрашивает существующий заказ GET /order/:id
В ответ сервис order возвращает заказ и заголовок Etag, содержащий число - версию заказа (количество обновлений данного заказа)

Для обновления заказа клиент формирует запрос PU /order/:id и добавляет в него заголовок IF-Match, содержащий версию заказа, полученную на предыдущем шаге.
Сервис order, получив такой запрос, сверяет версию заказа из запроса с версией заказа в своей БД:
1) если версии совпадат - сервис обновляет заказ и инкрементирует версию заказа
2) если версии не совпадают - сервис возвращает ошибку 409 Conflict 